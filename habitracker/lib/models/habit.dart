import 'package:flutter/material.dart';
import 'package:habitracker/functions/hex_color.dart';
import 'package:hive/hive.dart';
import 'package:uuid/uuid.dart';

part 'habit.g.dart';
// dart run build_runner build

/**
 * Aplica√ß√£o dos princ√≠pios SOLID neste arquivo:
 *  - Single Responsibility Principle (SRP): 
 *    Responsabilidades separadas em classes diferentes. 
 *    Habit √© respons√°vel por gerenciar o estado e representar um h√°bito e HabitRepository √© respons√°vel por lidar com a persist√™ncia de dados.
 */

/// Classe que representa um h√°bito
@HiveType(
    typeId: 1,
    adapterName:
        'HabitAdapter') // Os decorators do Hive (HiveType e HiveField) s√£o necess√°rios para serializa√ß√£o para o banco de dados
class Habit {
  @HiveField(0)
  String? key;
  @HiveField(1)
  String name;
  @HiveField(2)
  String? description;
  @HiveField(3)
  int icon;
  @HiveField(4)
  String color;

  Habit({
    this.key,
    required this.name,
    this.description,
    required this.icon,
    required this.color,
  }) : super() {
    // Se a key n√£o for informada gera um uuid
    key ??= const Uuid().v4();
  }

  // Construtor de habit a partir de um json
  factory Habit.fromJson(Map<String, dynamic> json) {
    return Habit(
      key: json['key'],
      name: json['name'],
      description: json['description'],
      icon: json['icon'],
      color: json['color'],
    );
  }

  // Converte o habit para um json
  Map<String, dynamic> toJson() {
    return {
      'key': key,
      'name': name,
      'description': description,
      'icon': icon,
      'color': color,
    };
  }
}

/// Classe que gerencia a persist√™ncia de h√°bitos
class HabitRepository {
  // Salvar h√°bito no banco de dados
  static void saveHabit(Habit habit) {
    var box = Hive.box<Habit>('habits');
    box.put(habit.key, habit);
  }

  // Obter um h√°bito pela key
  static Habit? getHabit(String key) {
    var box = Hive.box<Habit>('habits');
    return box.get(key);
  }

  // Obter todos os h√°bitos
  static List<Habit> getAllHabits() {
    var box = Hive.box<Habit>('habits');
    return box.values.toList();
  }

  // Deletar um h√°bito pela key
  static void deleteHabit(String key) {
    var box = Hive.box<Habit>('habits');
    box.delete(key);
  }
}

/* 
Exemplo de h√°bitos
TODO: Adicionar esses h√°bitos no banco de dados ao iniciar o aplicativo pela primeira vez (seed)
List<Habit> habits = [
    Habit(
      name: 'Exerc√≠cio',
      description: 'Fazer exerc√≠cios f√≠sicos',
      icon: 'üèãÔ∏è',
      color: Colors.red,
    ),
    Habit(
      name: 'Estudo',
      description: 'Estudar para a faculdade',
      icon: 'üìö',
      color: Colors.green,
    ),
    Habit(
      name: 'Leitura',
      description: 'Ler um livro',
      icon: 'üìñ',
      color: Colors.purple,
    ),
    Habit(
      name: 'Medita√ß√£o',
      description: 'Praticar medita√ß√£o',
      icon: 'üßò',
      color: Colors.orange,
    ),
    Habit(
      name: 'Hidrata√ß√£o',
      description: 'Beber √°gua',
      icon: 'üíß',
      color: Colors.blue,
    ),
  ]
 */